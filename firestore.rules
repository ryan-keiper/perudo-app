rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - for user profiles and stats
    match /users/{userId} {
      // Any authenticated user can read any profile (for displaying nicknames/avatars in games)
      allow read: if isAuthenticated();
      
      // Users can only create/update their own profile
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      
      // Users cannot delete profiles (preserve stats)
      allow delete: if false;
    }
    
    // Games collection
    match /games/{gameId} {
      // Any authenticated user can read games (to join or view)
      allow read: if isAuthenticated();
      
      // Any authenticated user can create a new game
      allow create: if isAuthenticated();
      
      // Any authenticated user can update games (for gameplay)
      // Consider restricting this to only players in the game in the future
      allow update: if isAuthenticated();
      
      // Only the game host can delete a game
      allow delete: if isAuthenticated() && 
        request.auth.uid == resource.data.host;
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}